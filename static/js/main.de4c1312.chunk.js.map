{"version":3,"sources":["features/AppBar/style.module.scss","features/Toolbar/style.module.scss","features/AppBar/index.js","features/Body/actionTypes.js","features/Body/actions.js","features/Body/index.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","algorithms/heapSort.js","utils/helpers.js","features/Toolbar/index.js","features/Home/index.js","App.js","app/redux/configureStore.js","app/redux/enhancers/monitorReducer.js","app/redux/middleware/logger.js","features/Body/reducer.js","app/redux/reducers.js","serviceWorker.js","index.js","features/Body/style.module.scss","features/Home/style.module.scss"],"names":["module","exports","AppBar","props","className","styles","appBar","logo","actionTypes","STORE_BUBBLE_SORTED_RESULT","IS_ALGO_RUNNING","SET_CURRENT_BUBBLETWO","SET_CURRENT_SWAPPERS","SET_CURRENT_SORTED","SET_ARRAY","SET_RUNNING","SET_ALGORITHM","SET_CURRENT_MERGEX","SET_CURRENT_QUICKTWO","SET_PIVOT","SET_CURRENT_HEAPTHREE","setCurrentBubbleTwo","payload","type","setCurrentSwappers","setCurrentSorted","setRunning","setArray","setCurrentMergeX","setCurrentQuickTwo","setPivot","setCurrentHeapThree","connect","state","isAlgoRunning","app","array","currentSwappers","currentSorted","currentBubbleTwo","currentMergeX","currentQuickTwo","pivot","currentHeapThree","dispatch","handleStartAlgoExecution","value","startAlgoExecution","numWidth","Math","floor","$","document","width","length","numMargin","margin","color","fontSize","chartContainer","map","number","index","customClass","includes","swapElements","bubbleElement","pivotElement","defaultElement","arrayElement","style","height","marginLeft","marginRigh","handleDispatch","toDispatch","speed","num","setTimeout","dispatchFunction","shift","bubbleSort","stateArray","slice","sorted","round","i","push","temp","mergeSort","mergeSortHelper","idx","start","end","obj","half","first","second","indexHalf","actualFirst","actualSecond","isFinalMerge","sortedArray","indexToPush","forEach","subArr","concat","actualSort","currentToDispatch","quickSort","quickSortHelper","left","right","console","log","Array","heapSort","currentIndex","siftDown","buildMaxHeap","swap","Toolbar","handleClick","bind","handleChange","generateArray","this","getElementById","algorithm","updateAlgorithm","evt","parseInt","target","sort","isRunning","pow","id","toolbar","generateButtonWrapper","generateButton","disabled","onClick","separator","slider","arraySize","min","max","onChange","currentAlgorithmButton","algorithmButton","sortButtonWrapper","sortButton","Component","n","arr","fill","item","random","getRandomArray","doSort","Home","container","bodyWrapper","toolbarContainer","bodyContainer","App","preloadedState","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","performance","now","newState","diff","logger","store","next","group","info","result","getState","groupEnd","rootReducer","combineReducers","appReducer","configureStore","middleware","loggerMiddleware","getDefaultMiddleware","enhancers","monitorReducersEnhancer","initSubscriber","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de4c1312.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"style_appBar__Eh89b\",\"logo\":\"style_logo__kfVgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"style_toolbar__3Qm40\",\"generateButtonWrapper\":\"style_generateButtonWrapper__3JaPq\",\"generateButton\":\"style_generateButton__10u3h\",\"sortButtonWrapper\":\"style_sortButtonWrapper__1vcUV\",\"sortButton\":\"style_sortButton__1JzcG\",\"arraySize\":\"style_arraySize__11pEp\",\"separator\":\"style_separator__3qnq7\",\"slider\":\"style_slider__3hupk\",\"currentAlgorithmButton\":\"style_currentAlgorithmButton__SHfAO\",\"algorithmButton\":\"style_algorithmButton__1UrmF\"};","import React from 'react'\r\nimport styles from './style.module.scss';\r\n// import PropTypes from 'prop-types'\r\n\r\nconst AppBar = props => {\r\n    return (\r\n        <div className={styles.appBar}>\r\n            <div className={styles.logo}>\r\n                <p>VisualAlgo</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// AppBar.propTypes = {\r\n\r\n// }\r\n\r\nexport default AppBar\r\n","const actionTypes = {\r\n    STORE_BUBBLE_SORTED_RESULT: 'STORE_BUBBLE_SORTED_RESULT',\r\n    IS_ALGO_RUNNING: 'IS_ALGO_RUNNING',\r\n    SET_CURRENT_BUBBLETWO: 'SET_CURRENT_BUBBLETWO',\r\n    SET_CURRENT_SWAPPERS: 'SET_CURRENT_SWAPPERS',\r\n    SET_CURRENT_SORTED: 'SET_CURRENT_SORTED',\r\n    SET_ARRAY: 'SET_ARRAY',\r\n    SET_RUNNING: 'SET_RUNNING',\r\n    SET_ALGORITHM: 'SET_ALGORITHM',\r\n    SET_CURRENT_MERGEX: 'SET_CURRENT_MERGEX',\r\n    SET_CURRENT_QUICKTWO: 'SET_CURRENT_QUICKTWO',\r\n    SET_PIVOT: 'SET_PIVOT',\r\n    SET_CURRENT_HEAPTHREE: 'SET_CURRENT_HEAPTHREE'\r\n};\r\n\r\nexport default actionTypes;","import actionTypes from \"./actionTypes\";\r\n\r\nexport const startAlgoExecution = (value) => ({\r\n    type: actionTypes.IS_ALGO_RUNNING,\r\n    value\r\n})\r\n\r\nexport const setCurrentBubbleTwo = (payload) => ({\r\n    type: actionTypes.SET_CURRENT_BUBBLETWO,\r\n    payload\r\n})\r\n\r\nexport const setCurrentSwappers = (payload) => ({\r\n    type: actionTypes.SET_CURRENT_SWAPPERS,\r\n    payload\r\n})\r\n\r\nexport const setCurrentSorted = (payload) => ({\r\n    type: actionTypes.SET_CURRENT_SORTED,\r\n    payload\r\n})\r\n\r\nexport const setRunning = (payload) => ({\r\n    type: actionTypes.SET_RUNNING,\r\n    payload\r\n})\r\n\r\nexport const setArray = (payload) => ({\r\n    type: actionTypes.SET_ARRAY,\r\n    payload\r\n})\r\n\r\nexport const setAlgorithm = (payload) => ({\r\n    type: actionTypes.SET_ALGORITHM,\r\n    payload\r\n})\r\n\r\nexport const setCurrentMergeX = (payload) => ({\r\n    type: actionTypes.SET_CURRENT_MERGEX,\r\n    payload\r\n})\r\n\r\nexport const setCurrentQuickTwo = (payload) => ({\r\n    type: actionTypes.SET_CURRENT_QUICKTWO,\r\n    payload\r\n})\r\n\r\nexport const setPivot = (payload) => ({\r\n    type: actionTypes.SET_PIVOT,\r\n    payload\r\n})\r\n\r\nexport const setCurrentHeapThree = (payload) => ({\r\n    type: actionTypes.SET_CURRENT_HEAPTHREE,\r\n    payload\r\n})","import React from \"react\";\r\nimport styles from \"./style.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { startAlgoExecution } from \"./actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport $ from \"jquery\";\r\n\r\nconst Body = ({\r\n  array,\r\n  currentSwappers,\r\n  currentSorted,\r\n  currentBubbleTwo,\r\n  currentMergeX,\r\n  currentQuickTwo,\r\n  pivot,\r\n  currentHeapThree\r\n}) => {\r\n  const numWidth = Math.floor($(document).width() / (array.length * 3));\r\n  const width = `${numWidth}px`;\r\n  const numMargin =\r\n    array.length < 5\r\n      ? 10\r\n      : array.length < 8\r\n      ? 8\r\n      : array.length < 11\r\n      ? 6\r\n      : array.length < 20\r\n      ? 4\r\n      : array.length < 50\r\n      ? 3.5\r\n      : array.length < 100\r\n      ? 3\r\n      : array.length < 130\r\n      ? 2.5\r\n      : 2;\r\n  const margin = `${numMargin}px`;\r\n  const color = numWidth > 20 ? \"white\" : \"transparent\";\r\n  const numFont =\r\n    numWidth > 70\r\n      ? 20\r\n      : numWidth > 60\r\n      ? 18\r\n      : numWidth > 50\r\n      ? 16\r\n      : numWidth > 40\r\n      ? 14\r\n      : numWidth > 30\r\n      ? 12\r\n      : numWidth > 20\r\n      ? 10\r\n      : 8;\r\n  const fontSize = `${numFont}px`;\r\n\r\n  return (\r\n    <div className={styles.chartContainer}>\r\n      {array.length\r\n        ? array.map((number, index) => {\r\n            const customClass = currentSwappers.includes(index)\r\n              ? styles.swapElements\r\n              : currentBubbleTwo.includes(index) ||\r\n                currentQuickTwo.includes(index) || currentHeapThree.includes(index) ||\r\n                currentMergeX.includes(index)\r\n              ? styles.bubbleElement\r\n              : pivot === index\r\n              ? styles.pivotElement\r\n              : currentSorted.includes(index)\r\n              ? styles.defaultElement\r\n              : styles.defaultElement;\r\n            return (\r\n              <div\r\n                className={`${styles.arrayElement} ${customClass}`}\r\n                key={index}\r\n                style={{\r\n                  height: `${number * 3}px`,\r\n                  width: width,\r\n                  marginLeft: margin,\r\n                  marginRigh: margin,\r\n                  color: color,\r\n                  fontSize: fontSize,\r\n                }}\r\n              >\r\n                {number}\r\n              </div>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nBody.propTypes = {\r\n  isAlgoRunning: PropTypes.bool,\r\n  handleStartAlgoExecution: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAlgoRunning: state.app.isAlgoRunning,\r\n  array: state.app.array,\r\n  currentSwappers: state.app.currentSwappers,\r\n  currentSorted: state.app.currentSorted,\r\n  currentBubbleTwo: state.app.currentBubbleTwo,\r\n  currentMergeX: state.app.currentMergeX,\r\n  currentQuickTwo: state.app.currentQuickTwo,\r\n  pivot: state.app.pivot,\r\n  currentHeapThree: state.app.currentHeapThree\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleStartAlgoExecution: (value) => dispatch(startAlgoExecution(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);\r\n","import {\r\n  setCurrentBubbleTwo,\r\n  setCurrentSorted,\r\n  setRunning,\r\n  setArray,\r\n  setCurrentSwappers,\r\n} from \"../features/Body/actions\";\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setCurrentBubbleTwo(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentBubbleTwo([]));\r\n      dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction =\r\n    toDispatch[0].length > 3\r\n      ? setArray\r\n      : toDispatch[0].length === 3 || toDispatch[0].length === 0\r\n      ? setCurrentSwappers\r\n      : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\"\r\n      ? setCurrentSorted\r\n      : setCurrentBubbleTwo;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport const bubbleSort = (stateArray, dispatch, speed) => {\r\n  let array = stateArray.slice(0),\r\n    toDispatch = [],\r\n    sorted = false,\r\n    round = 0;\r\n  while (!sorted) {\r\n    sorted = true;\r\n    for (let i = 0; i < array.length - 1 - round; i++) {\r\n      toDispatch.push([i, i + 1]);\r\n      if (array[i] > array[i + 1]) {\r\n        toDispatch.push([i, i + 1, true]);\r\n        let temp = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = temp;\r\n        sorted = false;\r\n        toDispatch.push(array.slice(0));\r\n        toDispatch.push([]);\r\n      }\r\n    }\r\n    toDispatch.push([true, array.length - 1 - round]);\r\n    round++;\r\n  }\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n};\r\n","import {\r\n  setCurrentSorted,\r\n  setRunning,\r\n  setArray,\r\n  setCurrentSwappers,\r\n  setCurrentMergeX,\r\n} from \"../features/Body/actions\";\r\n\r\nexport const mergeSort = (stateArray, dispatch, speed) => {\r\n  let array = stateArray.slice(0),\r\n    toDispatch = [];\r\n  let finalArray = mergeSortHelper(\r\n    array.map((num, idx) => [num, idx]),\r\n    toDispatch,\r\n    0,\r\n    array.length - 1,\r\n    { array: array.slice(0) }\r\n  );\r\n  handleDispatch(toDispatch, dispatch, finalArray, speed);\r\n};\r\n\r\nfunction mergeSortHelper(array, toDispatch, start, end, obj) {\r\n  if (array.length === 1) {\r\n    return array;\r\n  }\r\n  let half = Math.floor(array.length / 2),\r\n    first = array.slice(0, half),\r\n    second = array.slice(half),\r\n    indexHalf = Math.floor((end + 1 + start) / 2),\r\n    actualFirst = mergeSortHelper(first, toDispatch, start, indexHalf - 1, obj),\r\n    actualSecond = mergeSortHelper(second, toDispatch, indexHalf, end, obj),\r\n    isFinalMerge = false;\r\n  if (actualFirst.length + actualSecond.length === obj.array.length)\r\n    isFinalMerge = true;\r\n  return actualSort(\r\n    actualFirst,\r\n    actualSecond,\r\n    toDispatch,\r\n    obj,\r\n    start,\r\n    end,\r\n    isFinalMerge\r\n  );\r\n}\r\n\r\nfunction actualSort(first, second, toDispatch, obj, start, end, isFinalMerge) {\r\n  let sortedArray = [];\r\n  let indexToPush = start;\r\n  while (first.length && second.length) {\r\n    toDispatch.push([first[0][1], second[0][1]]);\r\n    if (first[0][0] <= second[0][0]) {\r\n      indexToPush++;\r\n      sortedArray.push(first.shift());\r\n    } else {\r\n      toDispatch.push([first[0][1], second[0][1], true]);\r\n      second[0][1] = indexToPush++;\r\n      sortedArray.push(second.shift());\r\n      first.forEach((subArr) => subArr[1]++);\r\n      if (start === 0) {\r\n        obj.array = sortedArray\r\n          .map((subArr) => subArr[0])\r\n          .concat(first.map((subArr) => subArr[0]))\r\n          .concat(second.map((subArr) => subArr[0]))\r\n          .concat(obj.array.slice(end + 1));\r\n      } else {\r\n        obj.array = obj.array\r\n          .slice(0, start)\r\n          .concat(sortedArray.map((subArr) => subArr[0]))\r\n          .concat(first.map((subArr) => subArr[0]))\r\n          .concat(second.map((subArr) => subArr[0]))\r\n          .concat(obj.array.slice(end + 1));\r\n      }\r\n      toDispatch.push(obj.array.concat([indexToPush - 1, indexToPush]));\r\n      toDispatch.push([]);\r\n    }\r\n    if (isFinalMerge) toDispatch.push([true, indexToPush - 1]);\r\n  }\r\n  return sortedArray.concat(first).concat(second);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setCurrentMergeX(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentMergeX([]));\r\n      dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction =\r\n    toDispatch[0].length > 3\r\n      ? setArray\r\n      : (toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\") ||\r\n        toDispatch[0].length === 0\r\n      ? setCurrentSwappers\r\n      : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\"\r\n      ? setCurrentSorted\r\n      : setCurrentMergeX;\r\n  if (dispatchFunction === setArray) {\r\n    let currentToDispatch = toDispatch.shift();\r\n    dispatch(\r\n      dispatchFunction(currentToDispatch.slice(0, currentToDispatch.length - 2))\r\n    );\r\n    dispatch(setCurrentSwappers([]));\r\n    dispatch(setCurrentMergeX([]));\r\n    dispatch(\r\n      setCurrentSwappers([\r\n        currentToDispatch[currentToDispatch.length - 2],\r\n        currentToDispatch[currentToDispatch.length - 1],\r\n      ])\r\n    );\r\n    dispatch(\r\n      setCurrentMergeX([\r\n        currentToDispatch[currentToDispatch.length - 2],\r\n        currentToDispatch[currentToDispatch.length - 1],\r\n      ])\r\n    );\r\n  } else {\r\n    dispatch(dispatchFunction(toDispatch.shift()));\r\n  }\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n","import {\r\n  setCurrentSorted,\r\n  setRunning,\r\n  setCurrentSwappers,\r\n  setArray,\r\n  setCurrentQuickTwo,\r\n  setPivot,\r\n} from \"../features/Body/actions\";\r\n\r\nexport const quickSort = (stateArray, dispatch, speed) => {\r\n  let array = stateArray.slice(0),\r\n    toDispatch = [];\r\n  quickSortHelper(array, 0, array.length - 1, toDispatch);\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n};\r\n\r\nfunction quickSortHelper(array, start, end, toDispatch) {\r\n  if (start >= end) {\r\n    toDispatch.push([true, start]);\r\n    return;\r\n  }\r\n  let pivot = start,\r\n    left = start + 1,\r\n    right = end;\r\n  toDispatch.push(pivot);\r\n  toDispatch.push([left, right]);\r\n  while (right >= left) {\r\n    if (array[right] < array[pivot] && array[left] > array[pivot]) {\r\n      toDispatch.push([left, right, true]);\r\n      let temp = array[right];\r\n      array[right] = array[left];\r\n      array[left] = temp;\r\n      toDispatch.push(array.slice(0));\r\n      toDispatch.push([]);\r\n    }\r\n    if (array[right] >= array[pivot]) {\r\n      right--;\r\n    }\r\n    if (array[left] <= array[pivot]) {\r\n      left++;\r\n    }\r\n    if (right >= left) toDispatch.push([left, right]);\r\n  }\r\n  toDispatch.push([pivot, right]);\r\n  if (pivot !== right) {\r\n    let temp = array[right];\r\n    array[right] = array[pivot];\r\n    array[pivot] = temp;\r\n    toDispatch.push([pivot, right, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    toDispatch.push([true, right]);\r\n  }\r\n  quickSortHelper(array, start, right - 1, toDispatch);\r\n  quickSortHelper(array, right + 1, end, toDispatch);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setPivot(null));\r\n    dispatch(setCurrentQuickTwo(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentQuickTwo([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    console.log(\"quicksort\");\r\n    return;\r\n  }\r\n  let dispatchFunction = !(toDispatch[0] instanceof Array)\r\n    ? setPivot\r\n    : toDispatch[0].length > 3\r\n    ? setArray\r\n    : toDispatch[0].length !== 2\r\n    ? setCurrentSwappers\r\n    : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\"\r\n    ? setCurrentSorted\r\n    : setCurrentQuickTwo;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  if (dispatchFunction === setPivot)\r\n    dispatch(setCurrentQuickTwo(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n","import {\r\n    setCurrentSorted,\r\n    setRunning,\r\n    setArray,\r\n    setCurrentSwappers,\r\n    setCurrentHeapThree\r\n  } from \"../features/Body/actions\";\r\n\r\nexport const heapSort = (stateArray, dispatch, speed) => {\r\n    let array = stateArray.slice(0),\r\n        toDispatch = [];\r\n    buildMaxHeap(array, toDispatch);\r\n    let end = array.length - 1;\r\n    while (end > 0) {\r\n      toDispatch.push([0, end]);\r\n      let temp = array[end];\r\n      array[end] = array[0];\r\n      array[0] = temp;\r\n      toDispatch.push([0, end, true]);\r\n      toDispatch.push(array.slice(0));\r\n      toDispatch.push([]);\r\n      toDispatch.push([true, end]);\r\n      siftDown(array, 0, end, toDispatch);\r\n      end--;\r\n    }\r\n    toDispatch.push([true, end]);\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n    return array;\r\n  }\r\n  \r\n  function buildMaxHeap(array, toDispatch) {\r\n    let currentIndex = Math.floor(array.length / 2);\r\n    while (currentIndex >= 0) {\r\n      siftDown(array, currentIndex, array.length, toDispatch);\r\n      currentIndex--;\r\n    }\r\n  }\r\n  \r\n  function siftDown(array, start, end, toDispatch) {\r\n    if (start >= Math.floor(end / 2)) {\r\n      return;\r\n    }\r\n    let left = start * 2 + 1,\r\n        right = start * 2 + 2 < end ? start * 2 + 2 : null,\r\n        swap;\r\n    if (right) {\r\n      toDispatch.push([start, left, right]);\r\n      swap = array[left] > array[right] ? left : right;\r\n    } else {\r\n      toDispatch.push([start, left]);\r\n      swap = left;\r\n    }\r\n    if (array[start] < array[swap]) {\r\n      let temp = array[swap];\r\n      array[swap] = array[start];\r\n      array[start] = temp;\r\n      toDispatch.push([start, swap, true]);\r\n      toDispatch.push(array.slice(0));\r\n      toDispatch.push([]);\r\n      siftDown(array, swap, end, toDispatch);\r\n    }\r\n  }\r\n  \r\n  function handleDispatch(toDispatch, dispatch, array, speed) {\r\n    if (!toDispatch.length) {\r\n      dispatch(setCurrentHeapThree(array.map((num, index) => index)));\r\n      setTimeout(() => {\r\n        dispatch(setCurrentHeapThree([]));\r\n        dispatch(setRunning(false));\r\n      }, 900);\r\n      return;\r\n    }\r\n    let dispatchFunction = toDispatch[0].length > 3 ?\r\n        setArray : (toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\") || !toDispatch[0].length ?\r\n          setCurrentSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n            setCurrentSorted : setCurrentHeapThree;\r\n    dispatch(dispatchFunction(toDispatch.shift()));\r\n    setTimeout(() => {\r\n      handleDispatch(toDispatch, dispatch, array, speed);\r\n    }, speed);\r\n  }\r\n","export const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n};\r\n\r\nexport const getRandomArray = (max, min, n) => {\r\n  let arr = Array(n).fill(0);\r\n  arr.forEach((item, index) => {\r\n    arr[index] = Math.floor(Math.random() * (max - min)) + min;\r\n  });\r\n  return arr;\r\n};\r\n\r\nexport const calcWidth = (screenWidth, numberOfCols) => {\r\n  let x = screenWidth / numberOfCols;\r\n  if (x > 30) {\r\n    return 20;\r\n  } else {\r\n    return x - 10;\r\n  }\r\n};\r\n\r\nexport const calcHeight = (screenHeight) => {\r\n  let x = screenHeight * 0.5;\r\n\r\n  if (x > 400) {\r\n    return 400;\r\n  } else {\r\n    return x;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./style.module.scss\";\r\n// import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setArray,\r\n  setAlgorithm,\r\n  setCurrentSorted,\r\n  setRunning,\r\n} from \"../Body/actions\";\r\nimport { bubbleSort } from \"../../algorithms/bubbleSort\";\r\nimport { mergeSort } from \"../../algorithms/mergeSort\";\r\nimport { quickSort } from '../../algorithms/quickSort';\r\nimport { heapSort } from '../../algorithms/heapSort';\r\nimport { getRandomArray } from \"../../utils/helpers\";\r\n\r\nclass Toolbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { generateArray } = this.props;\r\n\r\n    generateArray(30);\r\n    document.getElementById(\"changeSize\").value = 50;\r\n  }\r\n\r\n  handleClick(algorithm) {\r\n    const { updateAlgorithm } = this.props;\r\n\r\n    updateAlgorithm(algorithm);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    const { generateArray } = this.props;\r\n\r\n    generateArray(Math.floor((parseInt(evt.target.value) + 3) * 1.65));\r\n  }\r\n\r\n  render() {\r\n    const { array, algorithm, generateArray, sort, isRunning } = this.props;\r\n\r\n    const speed =\r\n      570 - Math.pow(array.length, 2) > 0 ? 570 - Math.pow(array.length, 2) : 0;\r\n\r\n    return (\r\n      <div id=\"toolbar\" className={styles.toolbar}>\r\n        <div\r\n          id={!isRunning ? \"generateArray\" : \"generateArrayX\"}\r\n          className={styles.generateButtonWrapper}\r\n        >\r\n          <button\r\n            className={styles.generateButton}\r\n            disabled={isRunning}\r\n            onClick={!isRunning ? () => generateArray(array.length) : null}\r\n          >\r\n            New Array\r\n          </button>\r\n        </div>\r\n        <div className={styles.separator}></div>\r\n        <div className={styles.slider}>\r\n          <div id=\"arraySize\" className={styles.arraySize}>\r\n            {`Size & Speed`}\r\n          </div>\r\n          <input\r\n            id=\"changeSize\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            disabled={isRunning}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className={styles.separator}></div>\r\n        <div\r\n          className={\r\n            algorithm === \"mergeSort\"\r\n              ? styles.currentAlgorithmButton\r\n              : styles.algorithmButton\r\n          }\r\n          onClick={() => this.handleClick(\"mergeSort\")}\r\n        >\r\n          Merge Sort\r\n        </div>\r\n        <div className={styles.separator}></div>\r\n        <div\r\n          className={\r\n            algorithm === \"quickSort\"\r\n              ? styles.currentAlgorithmButton\r\n              : styles.algorithmButton\r\n          }\r\n          onClick={() => this.handleClick(\"quickSort\")}\r\n        >\r\n          Quick Sort\r\n        </div>\r\n        <div className={styles.separator}></div>\r\n        <div\r\n          className={\r\n            algorithm === \"heapSort\"\r\n              ? styles.currentAlgorithmButton\r\n              : styles.algorithmButton\r\n          }\r\n          onClick={() => this.handleClick(\"heapSort\")}\r\n        >\r\n          Heap Sort\r\n        </div>\r\n        <div className={styles.separator}></div>\r\n        <div\r\n          className={\r\n            algorithm === \"bubbleSort\"\r\n              ? styles.currentAlgorithmButton\r\n              : styles.algorithmButton\r\n          }\r\n          onClick={() => this.handleClick(\"bubbleSort\")}\r\n        >\r\n          Bubble Sort\r\n        </div>\r\n        <div className={styles.separator}></div>\r\n        {\r\n          <div id=\"sort\" className={styles.sortButtonWrapper}>\r\n            <button\r\n              className={styles.sortButton}\r\n              disabled={isRunning}\r\n              onClick={!isRunning ? () => sort(algorithm, array, speed) : null}\r\n            >\r\n              Sort\r\n            </button>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  array: state.app.array,\r\n  algorithm: state.app.algorithm,\r\n  isRunning: state.app.isRunning,\r\n});\r\n\r\nconst mapDispatchToProps = () => (dispatch) => ({\r\n  generateArray: (length) => {\r\n    let array = getRandomArray(10, 90, length);\r\n    dispatch(setArray(array));\r\n    dispatch(setCurrentSorted([]));\r\n  },\r\n\r\n  updateAlgorithm: (algorithm) => {\r\n    dispatch(setAlgorithm(algorithm));\r\n  },\r\n\r\n  sort: (algorithm, array, speed) => {\r\n    let doSort =\r\n      algorithm === \"bubbleSort\"\r\n        ? bubbleSort\r\n        : algorithm === \"mergeSort\"\r\n        ? mergeSort\r\n        : algorithm === \"quickSort\" ?\r\n        quickSort\r\n        : algorithm === \"heapSort\" ?\r\n        heapSort : null;\r\n    dispatch(setCurrentSorted([]));\r\n    dispatch(setRunning(true));\r\n    doSort(array, dispatch, speed);\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\r\n","import React from 'react'\r\nimport AppBar from '../AppBar'\r\nimport Body from '../Body'\r\nimport Toolbar from '../Toolbar';\r\nimport styles from './style.module.scss';\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <AppBar />\r\n            <div className={styles.bodyWrapper}>\r\n                <div className={styles.toolbarContainer}>\r\n                    <Toolbar />\r\n                </div>\r\n                <div className={styles.bodyContainer}>\r\n                    <Body />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './features/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport monitorReducersEnhancer from './enhancers/monitorReducer';\r\nimport loggerMiddleware from './middleware/logger';\r\nimport rootReducer from './reducers';\r\nimport initSubscriber from 'redux-subscriber';\r\n\r\nconst configureAppStore = (preloadedState) => {\r\n    const store = configureStore({\r\n        reducer: rootReducer,\r\n        middleware: [loggerMiddleware, ...getDefaultMiddleware()],\r\n        preloadedState,\r\n        enhancers: [monitorReducersEnhancer]\r\n    });\r\n\r\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\r\n    }\r\n\r\n    return store;\r\n};\r\n\r\nconst store = configureAppStore();\r\n\r\ninitSubscriber(store);\r\n\r\nexport default store;","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n    reducer,\r\n    initialState,\r\n    enhancer\r\n) => {\r\n    const monitoredReducer = (state, action) => {\r\n        const start = performance.now();\r\n        const newState = reducer(state, action);\r\n        const end = performance.now();\r\n        const diff = round(end - start);\r\n\r\n        console.log('reducer process time:', diff);\r\n\r\n        return newState;\r\n    };\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer);\r\n};\r\n\r\nexport default monitorReducerEnhancer;","const logger = store => next => (action) => {\r\n    console.group(action.type);\r\n    console.info('dispatching', action);\r\n    let result = next(action);\r\n    console.log('next state', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\n\r\nexport default logger;","import actionTypes from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  isAlgoRunning: false,\r\n  array: [],\r\n  currentSwappers: [],\r\n  currentSorted: [],\r\n  isRunning: false,\r\n  currentBubbleTwo: [],\r\n  algorithm: '',\r\n  currentMergeX: [],\r\n  currentQuickTwo: [],\r\n  pivot: null,\r\n  currentHeapThree: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.IS_ALGO_RUNNING:\r\n      return {\r\n        ...state,\r\n        isAlgoRunning: action.value,\r\n      };\r\n    case actionTypes.SET_CURRENT_BUBBLETWO:\r\n      return {\r\n        ...state,\r\n        currentBubbleTwo: action.payload\r\n      };\r\n    case actionTypes.SET_CURRENT_SWAPPERS:\r\n      return {\r\n        ...state,\r\n        currentSwappers: action.payload.length ? action.payload : []\r\n      };\r\n    case actionTypes.SET_CURRENT_SORTED:\r\n      return {\r\n        ...state,\r\n        currentSorted: action.payload.length ? action.payload : []\r\n      };\r\n    case actionTypes.SET_ARRAY:\r\n      return {\r\n        ...state,\r\n        array: action.payload\r\n      };\r\n    case actionTypes.SET_RUNNING:\r\n        return {\r\n            ...state,\r\n            isRunning: action.payload\r\n        }\r\n    case actionTypes.SET_ALGORITHM:\r\n        return {\r\n            ...state,\r\n            algorithm: action.payload\r\n        }\r\n    case actionTypes.SET_CURRENT_MERGEX:\r\n        return {\r\n            ...state,\r\n            currentMergeX: action.payload\r\n        }\r\n    case actionTypes.SET_CURRENT_QUICKTWO:\r\n        return {\r\n            ...state,\r\n            currentQuickTwo: action.payload\r\n        }\r\n    case actionTypes.SET_PIVOT:\r\n        return {\r\n            ...state,\r\n            pivot: action.payload\r\n        }\r\n    case actionTypes.SET_CURRENT_HEAPTHREE:\r\n        return {\r\n            ...state,\r\n            currentHeapThree: action.payload\r\n        }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","  \r\nimport { combineReducers } from 'redux';\r\nimport appReducer from '../../features/Body/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n});\r\n\r\nexport default rootReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/redux/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3mvY9\",\"swapElements\":\"style_swapElements__12zp1\",\"bubbleElement\":\"style_bubbleElement__7HHox\",\"sorted\":\"style_sorted__1vREg\",\"defaultElement\":\"style_defaultElement__3vqmD\",\"pivotElement\":\"style_pivotElement__38pD4\",\"chartContainer\":\"style_chartContainer__3oh47\",\"arrayElement\":\"style_arrayElement__3us9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1U94F\",\"bodyWrapper\":\"style_bodyWrapper__z5vru\",\"toolbarContainer\":\"style_toolbarContainer__3udxF\",\"bodyContainer\":\"style_bodyContainer__33BQE\"};"],"sourceRoot":""}